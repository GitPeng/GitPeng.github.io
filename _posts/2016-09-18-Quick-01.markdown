---
layout: post
title:  "Quick 01: Basic"
date:   2016-09-18 20:00:00
categories: tutorial
---

Quick is a popular unit testing framework for Swift and Objective-C. Together with the matcher framework Nimble, it makes unit testing easier than XCTest. In the first tutorial, we will introduce basic knowledges about Quick with examples.

### Installation

We can get the details about installation from the [Installing Quick](https://github.com/Quick/Quick/blob/master/Documentation/en-us/InstallingQuick.md). Using CocoaPods is our favorite and recommendation.

### Add test target for Xcode project

* if you start a new project

 ![Add unit test](https://dl.dropboxusercontent.com/u/87778892/Quick/Basic/QuickBasic01.png)

* if you have a project already

 ![Add unit test target](https://dl.dropboxusercontent.com/u/87778892/Quick/Basic/QuickBasic02.png)

### Structure

A basic Quick testing file is like

<script src="https://gist.github.com/NilStack/bed1aa592b7ea155090dce176558902e.js"></script>

#### QuickSpec

>  "QuickSpec is a base class all specs written in Quick inherit from."
>  - From Quick Documentation

QuickSpec is subclass of XCTestCase which makes it found and driven by XCTest's mechanism. We need to  inherit QuickSpec and override the only function spec() where we put all our test case in. We'll explain details in coming articles.

#### beforeEach

Like setUp() in XCTestCase, beforeEach is a closure which will be run before each test. We can put all the preparation codes in it

### afterEach

Like tearDown in XCTestCase, afterEach is a closure which will be run after each test. We can put all the cleaning codes in it

### It, Context, Describe
To get a complete view of test in Quick, we will show an sample first.

<script src="https://gist.github.com/NilStack/b3aceda29b09904d67580e2682062228.js"></script>

Before introducing the core definitions, we need to explain Example definition in Quick. Example in Quick is test in XCTest, or test case in software testing. In codes, it is an 'it' function in which are the assertions to verify the behaviors of the our great app. So the 'it' function defines an example.

An 'Example group' is a logical group of examples. It is defined by context or describe. We can use context to test different scenario and group multiple scenarios into a describe.
